{"version":3,"file":"background.js","mappings":"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","sources":["webpack:///./src/background/domain/calculator.js","webpack:///./src/background/domain/models/consent.js","webpack:///./src/background/domain/models/contract.js","webpack:///./src/background/domain/models/header.js","webpack:///./src/background/domain/models/scored_preferences/scored_consent_preferences.js","webpack:///./src/background/domain/models/scored_preferences/scored_preferences.js","webpack:///./src/background/domain/negotiator.js","webpack:///./src/background/storage/contracts_repository.js","webpack:///./src/background/storage/preferences_repository.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/background/background.js"],"sourcesContent":["import Consent from './models/consent.js'\nimport Header from './models/header.js'\nimport ScoredPreferences from './models/scored_preferences/scored_preferences.js'\n\n/**\n * can calculate Nash-optimal contracts\n * initialize by first calling initUserScoringFunction & initSitesScoringFunction before calling the optimization method\n */\nexport default class Calculator {\n  /**\n   * Call to init the scoring function of the user.\n   *\n   * example inputs and outputs see in calculator.test.js\n   *\n   * @param {*} scoredPreferences to be transformed into the function\n   */\n  calcUsersScoringFunction (scoredPreferences) {\n    if (!(scoredPreferences instanceof ScoredPreferences)) {\n      throw Error('Preferences must be in data model ScoredPreferences')\n    }\n    return this._preferencesDataToFunction(scoredPreferences, true)\n  }\n\n  /**\n   * Call to init the scoring function of the site.\n   *\n   * @param {*} scoredPreferences to be transformed into the function\n   */\n  calcSitesScoringFunction (scoredPreferences) {\n    if (!(scoredPreferences instanceof ScoredPreferences)) {\n      throw Error('Preferences must be in data model ScoredPreferences')\n    }\n    return this._preferencesDataToFunction(scoredPreferences, false)\n  }\n\n  /**\n   * Change-Proposal: Nash optimal seem to be very imbalanced from time to time (s. Trello). Maybe include balance-score\n   *\n   * Calculates the Nash-optimal contract. For example inputs and expected outputs see testfile calculator.test.js\n   *\n   * @param {ScoredPreferences} usersScoredPreferences\n   * @param {ScoredPreferences} sitesScoredPreferences\n   * @param {} usersScoringFunction\n   * @param {} sitesScoringFunction\n   * @returns {Header} the header with nash optimal contract\n   */\n  calcNashContract (\n    usersScoredPreferences,\n    sitesScoredPreferences,\n    usersScoringFunction,\n    sitesScoringFunction\n  ) {\n    // In these nested loops, the best contract amongst all possible combinations of cost,\n    // content and consent preferences is found\n    const temporaryResult = { highscore: 0, bestContract: null }\n    const booleans = []\n\n    const costResolutions = sitesScoredPreferences.cost.resolutions ?? {\n      0: null\n    }\n\n    for (const costKey in costResolutions) {\n      // costKey only relevant in 3C negotiation\n      for (const contentKey in sitesScoredPreferences.content\n        .resolutions) {\n        // a recursive function to produce as many bools as needed to fill the negotiated consent resolutions\n        this._recursivelyCombineToOptimalContract(\n          Object.keys(sitesScoredPreferences.consent.resolutions).length,\n          booleans,\n          contentKey,\n          costKey,\n          sitesScoredPreferences.content.resolutions[contentKey],\n          usersScoredPreferences.content.resolutions[contentKey],\n          sitesScoredPreferences.cost.resolutions?.[costKey],\n          usersScoredPreferences.cost.resolutions?.[costKey],\n          sitesScoringFunction,\n          usersScoringFunction,\n          temporaryResult\n        )\n      }\n    }\n    console.log('hihgscore ', temporaryResult.highscore)\n    console.log(temporaryResult.bestContract)\n\n    // Map interim data model to contract\n    const consent = new Consent()\n\n    Object.keys(sitesScoredPreferences.consent.resolutions).forEach(\n      (resolution, index) => {\n        consent[resolution] = temporaryResult.bestContract[index]\n      }\n    )\n\n    return new Header(\n      null,\n      null,\n      consent,\n      temporaryResult.bestContract[temporaryResult.bestContract.length - 1],\n      temporaryResult.bestContract[temporaryResult.bestContract.length - 2]\n    )\n  }\n\n  /**\n   * Transforms the exchange data model for ScoredPreferences to a function.\n   * This function can be used to calculate the user's or site's preference score for a contract\n   * @param {ScoredPreferences} scoredPreferences\n   * @param {boolean} isUserPreferences\n   * @returns a callback to calculate the user's or site's preference score for a contract\n   *\n   * Example for a user's scored preferences:\n   * INPUT {\n   * consent: {\n   *   relevance: 0.4,\n   *   resolutions: {\n   *     analytics: 0.3,\n   *     marketing: 0.5,\n   *     personalizedAds: 0.2\n   *   }\n   * },\n   * content: {\n   *   relevance: 0.6,\n   *   resolutions: {\n   *     100: 1,\n   *     70: 0.9\n   *   }\n   * }\n   * OUTPUT (isUserPreferences)\n   * 100 * (0.4 * (1 - 0.3 * analytics - 0.5 * marketing - 0.2 * personalizedAds) + 0.6 * contentScore\n   *\n   * OUTPUT (!isUserPreferences)\n   * 100 * (0.4 * (0 + 0.3 * analytics + 0.5 * marketing + 0.2 * personalizedAds) + 0.6 * contentScore)\n   */\n\n  _preferencesDataToFunction (scoredPreferences, isUserPreferences) {\n    // if (!(scoredPreferences instanceof ScoredPreferences)) throw new Error('Not instanceof ScoredPreferences')\n\n    const is3CNegotiation = !!scoredPreferences.cost.relevance\n    const consentResolutions = scoredPreferences.consent.resolutions\n    const relevanceOfConsent = scoredPreferences.consent.relevance\n    const relevanceOfContent = scoredPreferences.content.relevance\n\n    return function (bools, contentScore, costScore) {\n      console.log(\n        'User? ',\n        isUserPreferences,\n        ', ',\n        bools,\n        ', ',\n        contentScore,\n        ', ',\n        costScore\n      )\n      if (bools.length < Object.keys(consentResolutions).length) {\n        throw new Error('Not enough bools provided')\n      }\n      let consentScore = isUserPreferences ? 1 : 0\n      let i = 0\n      for (const key in consentResolutions) {\n        const product = consentResolutions[key] * bools[i]\n        isUserPreferences\n          ? (consentScore -= product)\n          : (consentScore += product)\n        // TODO this is currently missing the case, where reject all still gets 20 base points\n        i++\n      }\n\n      let result =\n        relevanceOfConsent * consentScore + relevanceOfContent * contentScore\n\n      if (is3CNegotiation) {\n        result += scoredPreferences.cost.relevance * costScore\n      }\n\n      return Math.round(100 * result)\n    }\n  }\n\n  /**\n   * !!is recursive!!\n   *\n   * combines all possible boolean values for the consent resolutions\n   * (analytics, analytics && marketing ... analytics && marketing && ... && personalizedAds)\n   * to calculate the score of each possible contract.\n   *\n   * @param {number} limit number of consent resolutions (e.g. 3 if only analytics, marketing and personalizedAds are requested by the site)\n   * @param {*} bools an empty list, which will be filled and emptied during the recursions\n   * @param {*} sitesContentPreference site's preference score for the current content resolution\n   * @param {*} usersContentPreference user's preference score for the current content resolution\n   * @param {*} result A return object to be filled\n   * @returns an object with a highscore of the best contract and the best contract\n   */\n  _recursivelyCombineToOptimalContract (\n    limit,\n    bools,\n    contentKey,\n    costKey,\n    sitesContentPreference,\n    usersContentPreference,\n    sitesCostPreference,\n    usersCostPreference,\n    sitesScoringFunction,\n    usersScoringFunction,\n    result\n  ) {\n    if (limit === 0) {\n      const product =\n        usersScoringFunction(\n          bools,\n          usersContentPreference,\n          usersCostPreference\n        ) *\n        sitesScoringFunction(\n          bools,\n          sitesContentPreference,\n          sitesCostPreference\n        )\n      console.log(product, '   ', [...bools, contentKey, costKey])\n      if (product > result.highscore) {\n        // Found new best contract\n        result.highscore = product\n        result.bestContract = [...bools, contentKey, costKey]\n      }\n      return\n    }\n    // combine remaining consent options until last option included in combination\n\n    limit--\n\n    for (const bool of [false, true]) {\n      bools.push(bool)\n      this._recursivelyCombineToOptimalContract(\n        limit,\n        bools,\n        contentKey,\n        costKey,\n        sitesContentPreference,\n        usersContentPreference,\n        sitesCostPreference,\n        usersCostPreference,\n        sitesScoringFunction,\n        usersScoringFunction,\n        result\n      )\n      bools.pop(bool)\n    }\n  }\n}\n","/// Consent in bool\n/// Current state is bool = true\nexport default class Consent {\n  constructor (\n    analytics,\n    marketing,\n    personalizedContent,\n    personalizedAds,\n    externalContent,\n    identification\n  ) {\n    this.analytics = analytics\n    this.marketing = marketing\n    this.personalizedContent = personalizedContent\n    this.personalizedAds = personalizedAds\n    this.externalContent = externalContent\n    this.identification = identification\n  }\n\n  toString () {\n    let string = ''\n\n    if (this.analytics) {\n      string += 'analytics '\n    }\n    if (this.marketing) {\n      string += 'marketing '\n    }\n    if (this.personalizedContent) {\n      string += 'personalizedContent '\n    }\n    if (this.personalizedAds) {\n      string += 'personalizedAds '\n    }\n    if (this.externalContent) {\n      string += 'externalContent '\n    }\n    if (this.identification) {\n      string += 'identification '\n    }\n\n    return string.trimEnd()\n  }\n\n  // create instance from consent string (s. header)\n  // example string: 'rejectAll acceptAll analytics marketing personalizedContent personalizedAds externalContent identification'\n  static fromString (string) {\n    // Split the string into individual words\n    const options = string.split(' ')\n\n    // Map each word to its corresponding boolean value\n    const consent = {\n      analytics: false,\n      marketing: false,\n      personalizedContent: false,\n      personalizedAds: false,\n      externalContent: false,\n      identification: false\n    }\n\n    // Set the boolean values based on the words in the string\n    options.forEach((word) => {\n      if (Object.prototype.hasOwnProperty.call(consent, word)) {\n        consent[word] = true\n      }\n    })\n\n    // Return a new instance of Consent with the boolean values\n    return new Consent(\n      consent.analytics,\n      consent.marketing,\n      consent.personalizedContent,\n      consent.personalizedAds,\n      consent.externalContent,\n      consent.identification\n    )\n  }\n}\n","// eslint-disable-next-line no-unused-vars\nimport Consent from './consent.js'\n\nexport default class Contract {\n  /**\n   * Create a new Contract instance.\n   * @constructor\n   * @param {string} hostName - the sites main domain without.\n   * @param {Consent} consent\n   * @param {number} cost\n   * @param {number} content\n   */\n  constructor (hostName, consent, cost, content) {\n    this.hostName = hostName\n    this.consent = consent\n    this.cost = cost\n    this.content = content\n  }\n}\n","import ScoredPreferences from './scored_preferences/scored_preferences.js'\nimport Consent from './consent.js'\n\nexport const NegotiationStatus = {\n  EXCHANGE: 'exchange',\n  NEGOTIATION: 'negotiation',\n  ACCEPTED: 'accepted'\n}\n\nexport default class Header {\n  /**\n     * Create a new Header instance.\n     * @constructor\n     * @param {NegotiationStatus} status\n     * @param {ScoredPreferences} preferences\n     * @param {Consent} consent\n     * @param {number} cost\n     * @param {number} content\n     */\n  constructor (status, preferences, consent, cost, content) {\n    this.status = status // domain of website\n    this.preferences = preferences\n    this.consent = consent // [analytics, marketing...] a list!\n    this.cost = cost\n    this.content = content\n  }\n\n  // Deserialization\n  toString () {\n    let header = 'status=' + this.status.toString() + ' '\n\n    if (this.preferences && this.preferences instanceof ScoredPreferences) {\n      // TODO: toBase64EncodedJSON for preferences\n      header += 'preferences=' + this.preferences.toBase64EncodedJSON() + ' '\n    }\n\n    if (this.cost) {\n      header += 'cost=' + this.cost + ' '\n    }\n\n    if (this.consent && this.consent instanceof Consent) {\n      // TODO: toString for consent\n      const concat = this.consent.toString()\n      if (concat.length > 0) { header += 'consent=' + concat + ' ' }\n    }\n\n    if (this.content) {\n      header += 'content=' + this.content\n    }\n\n    return header.trimEnd()\n  }\n\n  // Serialization\n  // status=... (optional) preferences=base64encondedString (optional) consent=analytics marketing ...\n  //       (optional) cost=2 (optional) content=50\n  static fromString (header) {\n    const patterns = [/status=[^ ]+/, /preferences=[^ ]+/, /consent=.*?(?= content=|$)/, /cost=[^ ]+/, /content=[^ ]+/]\n    const matches = patterns.map(p => {\n      const match = p.exec(header)\n      return match ? match[0].split('=')[1] : null\n    })\n\n    if (matches[1]) { matches[1] = ScoredPreferences.fromBase64EncodedJSON(matches[1]) }\n\n    if (matches[2]) { matches[2] = Consent.fromString(matches[2]) }\n\n    return new Header(matches[0], matches[1], matches[2], matches[3], matches[4])\n  }\n}\n","export default class ScoredConsentPreferences {\n  /**\n     * Create a new ScoredConsentPreferences instance.\n     * Each variable has a number, the preference score.\n     *\n     * @constructor\n     * @param {number} analytics\n     * @param {number} marketing\n     * @param {number} personalizedContent\n     * @param {number} personalizedAds\n     * @param {number} externalContent\n     * @param {number} identification\n     */\n  constructor (analytics, marketing, personalizedContent, personalizedAds, externalContent, identification) {\n    this.analytics = analytics\n    this.marketing = marketing\n    this.personalizedContent = personalizedContent\n    this.personalizedAds = personalizedAds\n    this.externalContent = externalContent\n    this.identification = identification\n  }\n\n  /*\n    toJSON(){\n        return JSON.stringify(this)\n    }\n    */\n\n  static fromBase64EncodedJSON (json) {\n    const data = JSON.parse(atob(json))\n    return new ScoredConsentPreferences(\n      data.analytics,\n      data.marketing,\n      data.personalizedContent,\n      data.personalizedAds,\n      data.externalContent,\n      data.identification\n    )\n  }\n}\n","// eslint-disable-next-line no-unused-vars\nimport ScoredConsentPreferences from './scored_consent_preferences.js'\n\nexport const ConsentOption = Object.freeze({\n  ANALYTICS: 'analytics',\n  MARKETING: 'marketing',\n  PERSONALIZED_CONTENT: 'personalizedContent',\n  PERSONALIZED_ADS: 'personalizedAds',\n  EXTERNAL_CONTENT: 'externalContent',\n  IDENTIFICATION: 'identification'\n})\n\nexport const NegotiationIssues = Object.freeze({\n  COST: 'cost',\n  CONSENT: 'consent',\n  CONTENT: 'content'\n})\n\nexport default class ScoredPreferences {\n  /**\n   * Create a new ScoredPreferences instance.\n   */\n  constructor () {\n    this.cost = {}\n    this.consent = {}\n    this.content = {}\n  }\n\n  /**\n   *\n   * @param {*} issue @see {@link NegotiationIssues}\n   * @param {Number} relevance double in range from 0 to 1\n   */\n  setRelevanceOfIssue (issue, relevance) {\n    switch (issue) {\n      case NegotiationIssues.COST:\n        this.cost.relevance = relevance\n        break\n      case NegotiationIssues.CONSENT:\n        this.consent.relevance = relevance\n        break\n      case NegotiationIssues.CONTENT:\n        this.content.relevance = relevance\n        break\n      default:\n        throw Error(`Issue '${issue}' does not exist.`)\n    }\n  }\n\n  /**\n   * set the resolutions for an issue.\n   * resolution is a map of type {resolution:preferenceValue}.\n   * Read thesis for detailed document description.\n   *\n   * Examples:\n   * cost {5:1, 1:0.5,...}\n   * content: {100:1, 70:0.8,...}\n   * consent: {analytics:0.2, marketing 0.3,...}\n   *\n   * @param {String} issue cost, consent or content\n   * @param {Map} resolutions @see {@link ConsentOption} for available consent resolutions.\n   */\n  setResolutionsOfIssue (issue, resolutions) {\n    if (issue === NegotiationIssues.CONSENT) {\n      const validResolutions = Object.keys(resolutions).every((key) => {\n        return Object.values(ConsentOption).includes(key)\n      })\n      if (!validResolutions) throw Error('Unvalid resolutions.')\n    }\n\n    switch (issue) {\n      case NegotiationIssues.COST:\n        this.cost.resolutions = resolutions\n        break\n      case NegotiationIssues.CONSENT:\n        this.consent.resolutions = resolutions\n        break\n      case NegotiationIssues.CONTENT:\n        this.content.resolutions = resolutions\n        break\n      default:\n        throw Error(`Issue '${issue}' does not exist.`)\n    }\n  }\n\n  toBase64EncodedJSON () {\n    return btoa(JSON.stringify(this))\n  }\n\n  static fromBase64EncodedJSON (json) {\n    const data = JSON.parse(atob(json))\n    const scoredPreferences = new ScoredPreferences()\n    for (const key in data) {\n      if (!Object.values(NegotiationIssues).includes(key)) throw Error(`Unkown issue '${key}'.`)\n      scoredPreferences.setResolutionsOfIssue(key, data[key].resolutions)\n      scoredPreferences.setRelevanceOfIssue(key, data[key].relevance)\n    }\n\n    const totalRelevances =\n      (scoredPreferences.cost.relevance\n        ? scoredPreferences.cost.relevance\n        : 0) +\n      scoredPreferences.consent.relevance +\n      scoredPreferences.content.relevance\n\n    if (totalRelevances !== 1) throw Error('Sum of relevances must be 1')\n    return scoredPreferences\n  }\n}\n","// eslint-disable-next-line no-unused-vars\nimport PreferencesManager from './preference_manager.js'\n// eslint-disable-next-line no-unused-vars\nimport Calculator from './calculator.js'\nimport Consent from './models/consent.js'\nimport Header, { NegotiationStatus } from './models/header.js'\n\nexport default class Negotiator {\n  /**\n   *\n   * @param {Calculator} calculator\n   * @param {PreferencesManager} preferenceManager\n   */\n  constructor (calculator, preferenceManager) {\n    this.calculator = calculator\n    this.preferenceManager = preferenceManager\n  }\n\n  /**\n   * @returns @param {Header} header a newly initialized header to be appended to the first http-request\n   */\n  prepareInitialOffer () {\n    const consent = new Consent()\n    consent.rejectAll = true\n    return new Header(NegotiationStatus.EXCHANGE, null, consent, null, null)\n  }\n\n  /**\n   * If the offer could be attractive for the user, True is returned\n   * This implementation only accepts an offer if it's the Nash optimal contract\n   * @param {Header} header\n   * @param {*} domainURL\n   * @returns {Boolean} true if offer could be attractive for user\n   */\n  couldBeAttractiveForUser (header, domainURL) {\n    if (!(header instanceof Header)) {\n      throw new Error('Expected header to be an instance of Header')\n    }\n\n    let couldBeAttractive = false\n\n    // This implementation only accepts an offer, if it's the Nash optimal contract\n    const optimalContract = this.prepareCounteroffer(header, domainURL)\n\n    if (\n      header.consent === optimalContract.consent &&\n      header.cost === optimalContract.cost &&\n      header.content === optimalContract.content\n    ) {\n      couldBeAttractive = true\n    }\n\n    return couldBeAttractive\n  }\n\n  /**\n   * Prepare a counter offer\n   * This implementation always returns the nash optimal contract\n   * @param {Header} header\n   * @param {*} hostName\n   * @returns a new header\n   */\n  prepareCounteroffer (header, hostName) {\n    if (!(header instanceof Header)) {\n      throw new Error('Expected header to be an instance of Header')\n    }\n\n    const is2C = !!header.cost\n\n    const sitesScoredPreferences = this.preferenceManager.getSitesPreferences(\n      hostName,\n      is2C,\n      header\n    )\n\n    const usersScoredPreferences = this.preferenceManager.getUsersPreferences(\n      hostName,\n      is2C\n    )\n\n    // TODO load preferences\n    //    OR retrieve them from header\n    //    OR calculate/estimate them\n\n    const usersScoringFunction = this.calculator.calcUsersScoringFunction(\n      usersScoredPreferences\n    )\n    const sitesScoringFunction = this.calculator.calcSitesScoringFunction(\n      sitesScoredPreferences\n    )\n\n    // This implementation bases on the nash optimal contract\n    const counterOfferHeader = this.calculator.calcNashContract(\n      usersScoredPreferences,\n      sitesScoredPreferences,\n      usersScoringFunction,\n      sitesScoringFunction\n    )\n\n    counterOfferHeader.status = NegotiationStatus.NEGOTIATION\n\n    return counterOfferHeader\n  }\n}\n","import Contract from '../domain/models/contract.js'\n\nexport default class ContractRepository {\n  constructor () {\n    this.contracts = {}\n  }\n\n  getContract (hostname) {\n    return this.contracts[hostname] || null\n  }\n\n  setContract (hostname, contract) {\n    if (contract instanceof Contract) {\n      this.contracts[hostname] = contract\n      console.log('Contract stored for ', contract.hostName)\n    }\n  }\n}\n","// eslint-disable-next-line no-unused-vars\nimport ScoredPreferences from '../domain/models/scored_preferences/scored_preferences.js'\n\nexport default class PreferencesRepository {\n  constructor () {\n    this.sitesPreferences = new Map()\n    this.usersPreferences = new Map()\n  }\n\n  getUsersDefaultConsentPreferences () {\n    return {\n      analytics: 0.2,\n      marketing: 0.1,\n      personalizedContent: 0.1,\n      personalizedAds: 0.4,\n      externalContent: 0.1,\n      identification: 0.1\n    }\n  }\n\n  /**\n   *\n   * @param {String} hostName\n   * @param {Boolean} is2C\n   * @returns {ScoredPreferences | null}\n   */\n  getUsersPreferences (hostName, is2C) {\n    const pref = this.usersPreferences.get(hostName)\n\n    if (!pref) return null\n\n    if (is2C) {\n      return pref[0]\n    } else {\n      return pref[1] || null\n    }\n  }\n\n  /**\n   *\n   * @param {String} hostName\n   * @param {Boolean} is2C\n   * @returns {ScoredPreferences | null}\n   */\n  getSitesPreferences (hostName, is2C) {\n    const pref = this.sitesPreferences.get(hostName)\n\n    if (!pref) return null\n\n    if (is2C) {\n      return pref[0]\n    } else {\n      return pref[1] || null\n    }\n  }\n\n  /**\n   *\n   * @param {String} hostName\n   * @param {ScoredPreferences} scoredPreferences\n   */\n  setUsersPreferences (hostName, scoredPreferences) {\n    if (this.usersPreferences.has(hostName)) {\n      const temp = this.usersPreferences.get(hostName)\n      this.usersPreferences.set(hostName, { temp, scoredPreferences })\n    } else {\n      this.usersPreferences.set(hostName, scoredPreferences)\n    }\n  }\n\n  /**\n   *\n   * @param {String} hostName\n   * @param {ScoredPreferences} scoredPreferences\n   */\n  setSitesPreferences (hostName, scoredPreferences) {\n    if (this.sitesPreferences.has(hostName)) {\n      const temp = this.sitesPreferences.get(hostName)\n      this.sitesPreferences.set(hostName, { temp, scoredPreferences })\n    } else {\n      this.sitesPreferences.set(hostName, scoredPreferences)\n    }\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Contract from './domain/models/contract.js'\nimport Header, { NegotiationStatus } from './domain/models/header.js'\nimport ContractRepository from './storage/contracts_repository.js'\nimport Negotiator from './domain/negotiator.js'\nimport Calculator from './domain/calculator.js'\nimport PreferenceManager from './domain/preference_manager.js'\nimport PreferencesRepository from './storage/preferences_repository.js'\n\nconst negotiator = new Negotiator(new Calculator())\nconst contractRepository = new ContractRepository()\nconst preferenceManager = new PreferenceManager(new PreferencesRepository())\n\n/**\n * helper method\n * instead of www.google.com/.../... return google.com\n * @returns base url of domain\n */\nasync function getDomainURL () {\n  // eslint-disable-next-line no-undef\n  const tabs = await browser.tabs.query({ active: true, currentWindow: true })\n  const currentTab = tabs[0]\n  const currentUrl = new URL(currentTab.url)\n  return currentUrl.hostname\n}\n\n/**\n * TODO:\n * on first install initiate databases etc.\n */\n// eslint-disable-next-line no-undef\nbrowser.runtime.onInstalled.addListener(function (details) {\n  if (details.reason === 'install') {\n    // Perform database initialization tasks\n    // initializeDatabase();\n\n  }\n})\n\n// Event listener for intercepting HTTP requests\n// eslint-disable-next-line no-undef\nbrowser.webRequest.onBeforeSendHeaders.addListener(\n  async function (details) {\n    try {\n      // IF no agreement exists, THEN should start negotiation\n      // consequence: user clicks around in domain and negotiation will only be started once\n      const hostName = await getDomainURL()\n      const contract = contractRepository.getContract(hostName)\n\n      if (!contract) {\n        console.log('No contract found for host:', hostName)\n        // Construct initial header\n        const header = negotiator.prepareInitialOffer()\n\n        // Set up and store initial contract\n        contractRepository.setContract(\n          hostName,\n          new Contract(hostName, header.consent, null, null)\n        )\n        // init the users preferences\n        header.preferences = preferenceManager.initUsersPreferences(hostName)\n\n        details.requestHeaders.push({\n          name: 'ADPC',\n          value: header.toString()\n        })\n        console.log('header intercepted and modified: ', header.toString())\n      } else {\n        console.log('Contract found:', contract)\n      }\n\n      // Continue any request to its receiver\n      return { requestHeaders: details.requestHeaders }\n    } catch (error) {\n      console.error('An error occurred:', error)\n      console.error('Stack trace:', error.stack)\n      throw error // Re-throw the error to propagate it further\n    }\n  },\n  { urls: ['<all_urls>'] }, // Intercept all URLs\n  ['blocking', 'requestHeaders']\n)\n\n/**\n * intercepts responses from the site.\n * Only responses containing an ADPC @param {Header} header will be handled.\n * Will A) return an http-request to the server or B) show a pop-in to the user.\n *\n */\n// eslint-disable-next-line no-undef\nbrowser.webRequest.onHeadersReceived.addListener(\n  function (details) {\n    // Check if the request was successful\n    if (details.statusCode === 200) {\n      // Access the response headers\n      const responseHeaders = details.responseHeaders\n      const header = responseHeaders.find(header => header.name.toLowerCase() === 'ADPC')\n      if (header) {\n        const parsedHeader = Header.fromString(header.value)\n        console.log('Parsed Header ', parsedHeader)\n\n        switch (parsedHeader.status) {\n          case NegotiationStatus.EXCHANGE:\n            // calculate first offer\n            break\n          case NegotiationStatus.NEGOTIATION:\n            // isAttractive?\n            //   propose to user\n            // else\n            //   calculate counter offer similarly to first offer\n            break\n          case NegotiationStatus.ACCEPTED:\n            // hasUserAlreadyAccepted?\n            //   Congrats, inform user on new contract\n            // else\n            //   propose contract to user\n            break\n          default:\n            break\n        }\n\n        // SEND RESPONSE      VS    POP-IN\n\n        // Send the new HTTP request\n        /* const headers = {\n                    'X-New-Header': 'Your-Value'\n                };\n                const url = new URL(details.url, details.originUrl);\n                console.log(\"Request URL:\", url.href);\n                fetch(url, { headers }); */\n      }\n    }\n  },\n  { urls: ['<all_urls>'] }, // Intercept all URLs\n  ['responseHeaders']\n)\n"],"names":["Consent","Header","ScoredPreferences","Calculator","_classCallCheck","_createClass","key","value","calcUsersScoringFunction","scoredPreferences","Error","_preferencesDataToFunction","calcSitesScoringFunction","calcNashContract","usersScoredPreferences","sitesScoredPreferences","usersScoringFunction","sitesScoringFunction","_sitesScoredPreferenc","temporaryResult","highscore","bestContract","booleans","costResolutions","cost","resolutions","costKey","contentKey","content","_sitesScoredPreferenc2","_usersScoredPreferenc","_recursivelyCombineToOptimalContract","Object","keys","consent","length","console","log","forEach","resolution","index","isUserPreferences","is3CNegotiation","relevance","consentResolutions","relevanceOfConsent","relevanceOfContent","bools","contentScore","costScore","consentScore","i","product","result","Math","round","limit","sitesContentPreference","usersContentPreference","sitesCostPreference","usersCostPreference","concat","_toConsumableArray","_i","_arr","bool","push","pop","default","analytics","marketing","personalizedContent","personalizedAds","externalContent","identification","toString","string","trimEnd","fromString","options","split","word","prototype","hasOwnProperty","call","Contract","hostName","NegotiationStatus","EXCHANGE","NEGOTIATION","ACCEPTED","status","preferences","header","toBase64EncodedJSON","patterns","matches","map","p","match","exec","fromBase64EncodedJSON","ScoredConsentPreferences","json","data","JSON","parse","atob","ConsentOption","freeze","ANALYTICS","MARKETING","PERSONALIZED_CONTENT","PERSONALIZED_ADS","EXTERNAL_CONTENT","IDENTIFICATION","NegotiationIssues","COST","CONSENT","CONTENT","setRelevanceOfIssue","issue","setResolutionsOfIssue","validResolutions","every","values","includes","btoa","stringify","totalRelevances","PreferencesManager","Negotiator","calculator","preferenceManager","prepareInitialOffer","rejectAll","couldBeAttractiveForUser","domainURL","couldBeAttractive","optimalContract","prepareCounteroffer","is2C","getSitesPreferences","getUsersPreferences","counterOfferHeader","ContractRepository","contracts","getContract","hostname","setContract","contract","PreferencesRepository","sitesPreferences","Map","usersPreferences","getUsersDefaultConsentPreferences","pref","get","setUsersPreferences","has","temp","set","setSitesPreferences","_regeneratorRuntime","e","t","r","n","o","defineProperty","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","PreferenceManager","negotiator","contractRepository","getDomainURL","_getDomainURL","_callee2","tabs","currentTab","currentUrl","_callee2$","_context2","browser","query","active","currentWindow","URL","url","runtime","onInstalled","addListener","details","reason","webRequest","onBeforeSendHeaders","_ref","_callee","_callee$","_context","initUsersPreferences","requestHeaders","t0","stack","_x","urls","onHeadersReceived","statusCode","responseHeaders","find","toLowerCase","parsedHeader"],"sourceRoot":""}