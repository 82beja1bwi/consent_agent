{"version":3,"file":"background.js","mappings":"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","sources":["webpack:///./src/background/domain/models/consent.js","webpack:///./src/background/domain/models/contract.js","webpack:///./src/background/domain/models/header.js","webpack:///./src/background/domain/models/scored_preferences/scored_consent_preferences.js","webpack:///./src/background/domain/models/scored_preferences/scored_preferences.js","webpack:///./src/background/storage/contracts_repository.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/background/background.js"],"sourcesContent":["/// Consent in bool\n/// Current state is bool = true\nexport default class Consent {\n  constructor (rejectAll, acceptAll, analytics, marketing, personalizedContent, personalizedAds, externalContent, identification) {\n    this.rejectAll = rejectAll\n    this.acceptAll = acceptAll\n    this.analytics = analytics\n    this.marketing = marketing\n    this.personalizedContent = personalizedContent\n    this.personalizedAds = personalizedAds\n    this.externalContent = externalContent\n    this.identification = identification\n  }\n\n  toString () {\n    let string = ''\n\n    if (this.rejectAll) {\n      string += 'rejectAll '\n    }\n    if (this.acceptAll) {\n      string += 'acceptAll '\n    }\n    if (this.analytics) {\n      string += 'analytics '\n    }\n    if (this.marketing) {\n      string += 'marketing '\n    }\n    if (this.personalizedContent) {\n      string += 'personalizedContent '\n    }\n    if (this.personalizedAds) {\n      string += 'personalizedAds '\n    }\n    if (this.externalContent) {\n      string += 'externalContent '\n    }\n    if (this.identification) {\n      string += 'identification '\n    }\n\n    return string.trimEnd()\n  }\n\n  // create instance from consent string (s. header)\n  // example string: 'rejectAll acceptAll analytics marketing personalizedContent personalizedAds externalContent identification'\n  static fromString (string) {\n    // Split the string into individual words\n    const options = string.split(' ')\n\n    // Map each word to its corresponding boolean value\n    const consent = {\n      rejectAll: false,\n      acceptAll: false,\n      analytics: false,\n      marketing: false,\n      personalizedContent: false,\n      personalizedAds: false,\n      externalContent: false,\n      identification: false\n    }\n\n    // Set the boolean values based on the words in the string\n    options.forEach(word => {\n      if (consent.hasOwnProperty(word)) {\n        consent[word] = true\n      }\n    })\n\n    // Return a new instance of Consent with the boolean values\n    return new Consent(\n      consent.rejectAll,\n      consent.acceptAll,\n      consent.analytics,\n      consent.marketing,\n      consent.personalizedContent,\n      consent.personalizedAds,\n      consent.externalContent,\n      consent.identification\n    )\n  }\n}\n","// eslint-disable-next-line no-unused-vars\nimport Consent from './consent.js'\n\nexport default class Contract {\n  /**\n       * Create a new Contract instance.\n       * @constructor\n       * @param {string} baseURL - the sites main domain without.\n       * @param {Consent} consent\n       * @param {number} cost\n       * @param {number} content\n       */\n  constructor (baseURL, consent, cost, content) {\n    this.baseURL = baseURL\n    this.consent = consent\n    this.cost = cost\n    this.content = content\n  }\n}\n","import ScoredPreferences from './scored_preferences/scored_preferences.js'\nimport Consent from './consent.js'\n\nexport const NegotiationStatus = {\n  EXCHANGE: 'exchange',\n  NEGOTIATION: 'negotiation',\n  ACCEPTED: 'accepted'\n}\n\nexport default class Header {\n  /**\n     * Create a new Header instance.\n     * @constructor\n     * @param {NegotiationStatus} status\n     * @param {ScoredPreferences} preferences\n     * @param {Consent} consent\n     * @param {number} cost\n     * @param {number} content\n     */\n  constructor (status, preferences, consent, cost, content) {\n    this.status = status // domain of website\n    this.preferences = preferences\n    this.consent = consent // [analytics, marketing...] a list!\n    this.cost = cost\n    this.content = content\n  }\n\n  // Deserialization\n  toString () {\n    let header = 'status=' + this.status.toString() + ' '\n\n    if (this.preferences && this.preferences instanceof ScoredPreferences) {\n      // TODO: toBase64EncodedJSON for preferences\n      header += 'preferences=' + this.preferences.toBase64EncodedJSON() + ' '\n    }\n\n    if (this.cost) {\n      header += 'cost=' + this.cost + ' '\n    }\n\n    if (this.consent && this.consent instanceof Consent) {\n      // TODO: toString for consent\n      const concat = this.consent.toString()\n      if (concat.length > 0) { header += 'consent=' + concat + ' ' }\n    }\n\n    if (this.content) {\n      header += 'content=' + this.content\n    }\n\n    return header.trimEnd()\n  }\n\n  // Serialization\n  // status=... (optional) preferences=base64encondedString (optional) consent=analytics marketing ...\n  //       (optional) cost=2 (optional) content=50\n  static fromString (header) {\n    const patterns = [/status=[^ ]+/, /preferences=[^ ]+/, /consent=.*?(?= content=|$)/, /cost=[^ ]+/, /content=[^ ]+/]\n    const matches = patterns.map(p => {\n      const match = p.exec(header)\n      return match ? match[0].split('=')[1] : null\n    })\n\n    if (matches[1]) { matches[1] = ScoredPreferences.fromBase64EncodedJSON(matches[1]) }\n\n    if (matches[2]) { matches[2] = Consent.fromString(matches[2]) }\n\n    return new Header(matches[0], matches[1], matches[2], matches[3], matches[4])\n  }\n}\n","export default class ScoredConsentPreferences {\n  /**\n     * Create a new ScoredConsentPreferences instance.\n     * Each variable has a number, the preference score.\n     *\n     * @constructor\n     * @param {number} rejectAll\n     * @param {number} acceptAll //REMOVE\n     * @param {number} analytics\n     * @param {number} marketing\n     * @param {number} personalizedContent\n     * @param {number} personalizedAds\n     * @param {number} externalContent\n     * @param {number} identification\n     */\n  constructor (rejectAll, acceptAll, analytics, marketing, personalizedContent, personalizedAds, externalContent, identification) {\n    this.rejectAll = rejectAll\n    this.acceptAll = acceptAll // REMOVE, logical duplicate\n    this.analytics = analytics\n    this.marketing = marketing\n    this.personalizedContent = personalizedContent\n    this.personalizedAds = personalizedAds\n    this.externalContent = externalContent\n    this.identification = identification\n  }\n\n  /*\n    toJSON(){\n        return JSON.stringify(this)\n    }\n    */\n\n  static fromBase64EncodedJSON (json) {\n    const data = JSON.parse(atob(json))\n    return new ScoredConsentPreferences(\n      data.rejectAll,\n      data.acceptAll,\n      data.analytics,\n      data.marketing,\n      data.personalizedContent,\n      data.personalizedAds,\n      data.externalContent,\n      data.identification\n    )\n  }\n}\n","// eslint-disable-next-line no-unused-vars\nimport ScoredConsentPreferences from './scored_consent_preferences.js'\n\nexport default class ScoredPreferences {\n  /**\n     * Create a new ScoredPreferences instance.\n     * @constructor\n     * @param {Map<number, number>} cost\n     * @param {ScoredConsentPreferences} consent\n     * @param {Map<number, number>} content\n     */\n  constructor (cost, consent, content) {\n    this.cost = cost\n    this.consent = consent\n    this.content = content\n  }\n\n  toBase64EncodedJSON () {\n    return btoa(JSON.stringify(this))\n  }\n\n  static fromBase64EncodedJSON (json) {\n    const data = JSON.parse(atob(json))\n    return new ScoredPreferences(\n      data.cost,\n      data.consent,\n      data.content\n    )\n  }\n}\n","import Contract from '../domain/models/contract.js'\n\nconst contracts = {}\n\nexport function getContract (baseURL) {\n  return contracts[baseURL] || null\n}\n\nexport function setContract (baseURL, contract) {\n  if (contract instanceof Contract) {\n    contracts[baseURL] = contract\n    console.log('Contract stored for ', contract.baseURL)\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Contract from './domain/models/contract.js'\nimport Consent from './domain/models/consent.js'\nimport Header, { NegotiationStatus } from './domain/models/header.js'\nimport { getContract, setContract } from './storage/contracts_repository.js'\n\nasync function getDomainURL () {\n  // eslint-disable-next-line no-undef\n  const tabs = await browser.tabs.query({ active: true, currentWindow: true })\n  const currentTab = tabs[0]\n  const currentUrl = new URL(currentTab.url)\n  const domainURL = currentUrl.origin\n  return domainURL\n}\n\n/**\n * TODO:\n * on first install initiate databases etc.\n */\n// eslint-disable-next-line no-undef\nbrowser.runtime.onInstalled.addListener(function (details) {\n  if (details.reason === 'install') {\n    // Perform database initialization tasks\n    // initializeDatabase();\n  }\n})\n\n// Event listener for intercepting HTTP requests\n// eslint-disable-next-line no-undef\nbrowser.webRequest.onBeforeSendHeaders.addListener(\n  async function (details) {\n    try {\n      // IF no agreement exists, THEN should start negotiation\n      // consequence: user clicks around in domain and negotiation will only be started once\n      const domainURL = await getDomainURL()\n      console.log('Domain URL:', domainURL)\n      const contract = getContract(domainURL)\n      const contractExists = contract != null\n      if (!contractExists) {\n        console.log('No contract found for domain URL:', domainURL)\n        // TODO: Praeferenzen laden\n        //\n        // Contract is initiated\n        setContract(domainURL, new Contract(domainURL, new Consent(false, false, false, false, false, false), 0, 100))\n        console.log('Initiated contract')\n        // TODO: construct initial header\n        details.requestHeaders.push({\n          name: 'X-Custom-Header',\n          value: 'HelloImTheClientsAgent'\n        })\n        console.log('header intercepted and modified')\n      } else {\n        console.log('Contract found:', contract)\n      }\n\n      return { requestHeaders: details.requestHeaders }\n    } catch (error) {\n      console.error('An error occurred:', error)\n      console.error('Stack trace:', error.stack)\n      throw error // Re-throw the error to propagate it further\n    }\n  },\n  { urls: ['<all_urls>'] }, // Intercept all URLs\n  ['blocking', 'requestHeaders']\n)\n\n/**\n * intercepts responses from the site.\n * Only responses containing an ADPC @param {Header} header will be handled.\n * Will A) return an http-request to the server or B) show a pop-in to the user.\n *\n */\n// eslint-disable-next-line no-undef\nbrowser.webRequest.onHeadersReceived.addListener(\n  function (details) {\n    // Check if the request was successful\n    if (details.statusCode === 200) {\n      // Access the response headers\n      const responseHeaders = details.responseHeaders\n      const header = responseHeaders.find(header => header.name.toLowerCase() === 'ADPC')\n      if (header) {\n        const parsedHeader = Header.fromString(header.value)\n        console.log('Parsed Header ', parsedHeader)\n\n        switch (parsedHeader.status) {\n          case NegotiationStatus.EXCHANGE:\n            // calculate first offer\n            break\n          case NegotiationStatus.NEGOTIATION:\n            // isAttractive?\n            //   propose to user\n            // else\n            //   calculate counter offer similarly to first offer\n            break\n          case NegotiationStatus.ACCEPTED:\n            // hasUserAlreadyAccepted?\n            //   Congrats, inform user on new contract\n            // else\n            //   propose contract to user\n            break\n          default:\n            break\n        }\n\n        // SEND RESPONSE      VS    POP-IN\n\n        // Send the new HTTP request\n        /* const headers = {\n                    'X-New-Header': 'Your-Value'\n                };\n                const url = new URL(details.url, details.originUrl);\n                console.log(\"Request URL:\", url.href);\n                fetch(url, { headers }); */\n      }\n    }\n  },\n  { urls: ['<all_urls>'] }, // Intercept all URLs\n  ['responseHeaders']\n)\n"],"names":["Consent","rejectAll","acceptAll","analytics","marketing","personalizedContent","personalizedAds","externalContent","identification","_classCallCheck","_createClass","key","value","toString","string","trimEnd","fromString","options","split","consent","forEach","word","hasOwnProperty","default","Contract","baseURL","cost","content","ScoredPreferences","NegotiationStatus","EXCHANGE","NEGOTIATION","ACCEPTED","Header","status","preferences","header","toBase64EncodedJSON","concat","length","patterns","matches","map","p","match","exec","fromBase64EncodedJSON","ScoredConsentPreferences","json","data","JSON","parse","atob","btoa","stringify","contracts","getContract","setContract","contract","console","log","_regeneratorRuntime","e","t","r","Object","prototype","n","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","getDomainURL","_getDomainURL","_callee2","tabs","currentTab","currentUrl","domainURL","_callee2$","_context2","browser","query","active","currentWindow","URL","url","origin","runtime","onInstalled","addListener","details","reason","webRequest","onBeforeSendHeaders","_ref","_callee","contractExists","_callee$","_context","requestHeaders","t0","stack","_x","urls","onHeadersReceived","statusCode","responseHeaders","find","toLowerCase","parsedHeader"],"sourceRoot":""}